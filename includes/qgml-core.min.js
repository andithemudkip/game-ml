class QGML{constructor(){this.p5=null,this.gameManager=null}static setup(config){this.width=config.width,this.height=config.height,this.gameManager=new this.GameManager(config),this.gameManager.createWorlds(),this.ctx=new QGML.Context,this.gameManager.createKeymappers(),this.preload=function(p){for(let i=0,texts=QGML.World.current.texts;i<texts.length;i++)texts[i].preload(p)},this.setup=function(p){QGML.ctx.setVar("p5",p),p.background(50),p.fill(255),p.frameRate(60);for(let i=0,actors=QGML.World.current.actors;i<actors.length;i++)actors[i].setup(p);for(let i=0,groups=QGML.World.current.groups;i<groups.length;i++)groups[i].setup(p);QGML.gameManager.scripts[QGML.World.current.id]&&QGML.ctx.eval(QGML.gameManager.scripts[QGML.World.current.id].setup)},this.p5=new p5(QGML.createSketch(config),config.rootElementID)}static createSketch(config){const{width:width,height:height,assets:assets}=config;return function(p){p.preload=function(){for(let i=0,sheets=assets.spritesheets;i<sheets.length;i++)for(let j=0;j<sheets[i].frames.length;j++)assets.spritesheets[i].frames[j]=p.loadImage(sheets[i].frames[j]);for(let i=0,sprites=assets.sprites;i<sprites.length;i++)assets.sprites[i].image=p.loadImage(sprites[i].image);QGML.gameManager.assets=assets,QGML.preload(p)},p.setup=function(){p.createCanvas(width,height);QGML.setup(p)},p.draw=function(){QGML.debug&&p.frameCount%60==0&&performance.mark("start-of-draw"),p.background(50);for(let i=0,n=QGML.gameManager.currentGroups.length;i<n;i++)QGML.gameManager.currentGroups[i].update();for(let i=0,n=QGML.gameManager.currentActors.length;i<n;i++)QGML.gameManager.currentActors[i].draw(p);for(let i=0,n=QGML.gameManager.currentTexts.length;i<n;i++)QGML.gameManager.currentTexts[i].draw(p);if(QGML.gameManager.keymappers[QGML.World.current.id]){for(let i=0,keys=Object.keys(QGML.gameManager.keymappers[QGML.World.current.id].keys.down),n=keys.length;i<n;i++)p.keyIsDown(keys[i])&&QGML.gameManager.keymappers[QGML.World.current.id].keys.down[keys[i]]();for(let i=0,groups=QGML.gameManager.keymappers[QGML.World.current.id].groups.down;i<groups.length;i++)groups[i].checkKeysDown(p);for(let i=0,keys=Object.keys(QGML.gameManager.keymappers[QGML.World.current.id].keys.up),n=keys.length;i<n;i++)p.keyIsDown(keys[i])||QGML.gameManager.keymappers[QGML.World.current.id].keys.up[keys[i]]();for(let i=0,groups=QGML.gameManager.keymappers[QGML.World.current.id].groups.up;i<groups.length;i++)groups[i].checkKeysUp(p)}if(QGML.gameManager.scripts[QGML.World.current.id]&&QGML.ctx.eval(QGML.gameManager.scripts[QGML.World.current.id].update),QGML.debug&&(p.fill(255),p.text(Math.round(QGML.frameRate)+" fps",5,15),p.text(QGML.frameTime.toFixed(3)+" ms frame time",5,35),p.frameCount%60==0)){performance.measure("measure frame time","start-of-draw");let perf=performance.getEntriesByName("measure frame time");QGML.frameTime=perf[0].duration,QGML.frameRate=p.frameRate(),performance.clearMeasures()}},p.keyPressed=function(){if(QGML.gameManager.keymappers[QGML.World.current.id]){QGML.gameManager.keymappers[QGML.World.current.id].keys.pressed[p.keyCode]&&QGML.gameManager.keymappers[QGML.World.current.id].keys.pressed[p.keyCode]();for(let i=0,groups=QGML.gameManager.keymappers[QGML.World.current.id].groups.pressed;i<groups.length;i++)groups[i].checkKey(String.fromCharCode(p.keyCode).toLowerCase())}},p.keyReleased=function(){if(QGML.gameManager.keymappers[QGML.World.current.id]){QGML.gameManager.keymappers[QGML.World.current.id].keys.released[p.keyCode]&&QGML.gameManager.keymappers[QGML.World.current.id].keys.released[p.keyCode]();for(let i=0,groups=QGML.gameManager.keymappers[QGML.World.current.id].groups.released;i<groups.length;i++)groups[i].checkKey(String.fromCharCode(p.keyCode).toLowerCase())}}}}}QGML.debug=!0,QGML.frameRate=0,QGML.frameTime=0,QGML.Context=function(){var _gmlVars=QGML.gameManager?Object.assign({},QGML.gameManager.vars.global,QGML.gameManager.vars[QGML.gameManager.selectedWorld.id]):[];let keys=Object.keys(_gmlVars);for(key of keys)try{eval(`var ${key} = ${_gmlVars[key]};`)}catch(err){eval(`var ${key} = "${_gmlVars[key]}";`)}function loadWorld(str){QGML.gameManager.loadWorld(str)}function getPosition(entity){return entity.state.position}function dist(x1,y1,x2,y2){return(x1 instanceof QGML.Actor||x1 instanceof QGML.Group)&&(y1 instanceof QGML.Actor||y1 instanceof QGML.Group)?Math.hypot(getPosition(x1).x-getPosition(y1).x,getPosition(x1).y-getPosition(y1).y):Math.hypot(x2-x1,y2-y1)}function getActor(id){return QGML.World.current.actors.find(a=>a.id===id)}function getGroup(id){return QGML.World.current.groups.find(g=>g.name===id)}this.eval=function(str,context){let res;if(res=context?eval(str).bind(context):eval(str),QGML.gameManager.vars[QGML.World.current.id])for(key of keys)key in QGML.gameManager.vars[QGML.World.current.id]?QGML.gameManager.setVar(QGML.World.current.id,key,eval(key)):QGML.gameManager.setVar("global",key,eval(key));return res},this.setVar=function(name,value){this[name]=value}},QGML.Keymapper=class{constructor(obj){this.keys={down:{},up:{},pressed:{},released:{}},this.groups={down:[],up:[],pressed:[],released:[]},Object.keys(obj).forEach(key=>{let opts=key.split("|"),keyCode=QGML.Keymapper.keyCodeFromString(opts[0]);if(keyCode)this.keys[opts[1]||"pressed"][keyCode]=QGML.ctx.eval(obj[key]);else{let group=QGML.Keymapper.groupFromString(opts[0],obj[key]);group&&this.groups[opts[1]||pressed].push(group)}})}static groupFromString(str,toexec){if(str.startsWith("[")&&str.endsWith("]")){let keys=(str=str.slice(1,str.length-1)).split(","),obj={keys:{},do:QGML.ctx.eval(toexec),checkKey(key){if(!(key in this.keys))return!1;{this.keys[key]=!0;let shouldExecute=!0;for(let k in this.keys)this.keys[k]||(shouldExecute=!1);if(shouldExecute){this.do();for(let k in this.keys)this.keys[k]=!1}}},checkKeysDown(p){let shouldExecute=!0;for(let k in this.keys)p.keyIsDown(QGML.Keymapper.keyCodeFromString(k))||(shouldExecute=!1);shouldExecute&&this.do()},checkKeysUp(p){let shouldExecute=!0;for(let k in this.keys)p.keyIsDown(QGML.Keymapper.keyCodeFromString(k))&&(shouldExecute=!1);shouldExecute&&this.do()}};for(let i=0;i<keys.length;i++)obj.keys[keys[i]]=!1;return obj}return null}static keyCodeFromString(str){let keyCode=0;return Number(str)?keyCode=Number(str):1===str.length?keyCode=str.toUpperCase().charCodeAt(0):Object.keys(QGML.Keymapper.keyTable).forEach(key=>{str.toUpperCase()===key&&(keyCode=QGML.Keymapper.keyTable[key])}),keyCode}},QGML.Keymapper.keyTable={BACKSPACE:8,DELETE:46,ENTER:13,RETURN:13,TAB:9,ESCAPE:27,SHIFT:16,CONTROL:17,OPTION:18,ALT:18,UP_ARROW:38,DOWN_ARROW:40,LEFT_ARROW:37,RIGHT_ARROW:39,SPACE:32},QGML.Text=class{constructor({group:group=null,state:state="",value:value="",id:id="default-text",font:font={}},worldObj){this.id=id,this.group=worldObj.groups.find(grp=>grp.name===group),this.state={position:{x:0,y:0},color:null,stroke:null},this.value=value,this.originalValue=value,this.originalState=state,this.font=font}preload(p){"file"===this.font.type?this.font=p.loadFont(this.font.base64):"web"===this.font.type?this.font=this.font.name:this.font=null}setup(p){}draw(p){p.push();let pos={x:this.state.position.x,y:this.state.position.y};this.group&&(pos.x+=this.group.absolutePosition.x,pos.y+=this.group.absolutePosition.y),this.originalState&&(this.state=QGML.ctx.eval(this.originalState),this.value=QGML.ctx.eval("`"+this.originalValue+"`"),this.state.stroke?(p.stroke(p.color(this.state.stroke.color)),p.strokeWeight(this.state.stroke.weight)):p.noStroke(),this.state.color?p.fill(p.color(this.state.color)):p.noFill(),p.textSize(this.state.size),p.textStyle(this.state.style),p.textAlign(this.state.align),this.font&&p.textFont(this.font)),p.text(this.value,pos.x,pos.y),p.pop()}},QGML.Actor=class{constructor({group:group=null,state:state="",id:id="default-actor",sprite:sprite,animator:animator,customUpdate:customUpdate,customSetup:customSetup},worldObj){this.id=id,this.sprite=sprite,this.animator=animator,this.group=worldObj.groups.find(grp=>grp.name===group),this.state={position:{x:0,y:0},size:{width:0,height:0},color:null,stroke:null},this.originalState=state,this.scale={x:1,y:1,set(obj){Object.assign(this,obj)}},this.direction={x:1,y:1,set:(axis,value)=>{"horizontal"===axis?"left"===value||-1===value?this.direction.x=-1:"right"!==value&&1!==value||(this.direction.x=1):"vertical"===axis&&("up"===value||1===value?this.direction.x=1:"down"!==value&&-1!==value||(this.direction.x=-1))}},this.flip={horizontal:()=>{this.direction.x=-this.direction.x},vertical:()=>{this.direction.y=-this.direction.y}},this.customUpdate=customUpdate,this.customSetup=customSetup}setup(p){this.sprite=QGML.Sprite.Create(this.sprite),this.animator=QGML.Animator.Create(this.animator),this.customSetup&&QGML.ctx.eval(this.customSetup,this)(),this.customUpdate&&(this.customUpdate=QGML.ctx.eval(this.customUpdate,this))}draw(p){if(this.state.size.width&&this.state.size.height){p.push();let pos=this.state.position,scale=this.scale;this.group&&(pos.x+=this.group.absolutePosition.x,pos.y+=this.group.absolutePosition.y),this.state.stroke?(p.strokeWeight(this.state.stroke.weight),p.stroke(p.color(this.state.stroke.color))):p.noStroke(),this.state.color?p.fill(p.color(this.state.color)):p.noFill(),p.rect(pos.x,pos.y,this.state.size.width,this.state.size.height),this.animator?(p.imageMode(p.CENTER),p.translate(pos.x+this.state.size.width/2,pos.y+this.state.size.height/2),p.scale(scale.x*this.direction.x,scale.y*this.direction.y),p.image(this.animator.getFrame(),0,0)):this.sprite&&(p.imageMode(p.CENTER),p.translate(pos.x+this.state.size.width/2,pos.y+this.state.size.height/2),p.scale(scale.x*this.direction.x,scale.y*this.direction.y),p.image(this.sprite.get(),0,0)),p.pop()}this.originalState&&(this.state=QGML.ctx.eval(this.originalState)),this.animator&&this.animator.update(),this.customUpdate&&this.customUpdate()}},QGML.Animator=class{constructor({spritesheets:spritesheets}){this.spritesheets=spritesheets,this.selectedSheet=null;for(let i=0,keys=Object.keys(this.spritesheets);i<keys.length;i++)this.spritesheets[keys[i]].default&&(this.selectedSheet=keys[i],this.currentFrames=QGML.gameManager.findAsset("spritesheets",this.spritesheets[keys[i]].name).frames,this.frameTime=QGML.gameManager.findAsset("spritesheets",this.spritesheets[keys[i]].name).frameTime||1);if(!this.selectedSheet){let key=Object.keys(this.spritesheets)[0];this.selectedSheet=key,this.currentFrames=QGML.gameManager.findAsset("spritesheets",this.spritesheets[key].name).frames,this.frameTime=QGML.gameManager.findAsset("spritesheets",this.spritesheets[key].name).frameTime||1}this.currentFrame=0,this.count=0,this.lastAnimation=this.selectedSheet,this.shouldLoop=!0}update(){this.count++,this.count>this.frameTime&&(this.nextFrame(),this.count=0)}nextFrame(){this.currentFrame+1<this.currentFrames.length?this.currentFrame++:this.shouldLoop?this.currentFrame=0:this.set(this.lastAnimation)}getFrame(){return this.currentFrames[this.currentFrame]}play(name){console.log(name);for(let i=0,keys=Object.keys(this.spritesheets);i<keys.length;i++)keys[i]===name&&(this.selectedSheet=keys[i],this.currentFrames=QGML.gameManager.findAsset("spritesheets",this.spritesheets[keys[i]].name).frames,this.frameTime=QGML.gameManager.findAsset("spritesheets",this.spritesheets[keys[i]].name).frameTime||1,this.currentFrame=0,this.count=0,this.shouldLoop=!1)}set(name){if(name!=this.selectedSheet)for(let i=0,keys=Object.keys(this.spritesheets);i<keys.length;i++)keys[i]===name&&(this.selectedSheet=keys[i],this.currentFrames=QGML.gameManager.findAsset("spritesheets",this.spritesheets[keys[i]].name).frames,this.frameTime=QGML.gameManager.findAsset("spritesheets",this.spritesheets[keys[i]].name).frameTime||1,this.currentFrame=0,this.count=0,this.lastAnimation=this.selectedSheet,this.shouldLoop=!0)}static Create(animator){return animator&&animator.spritesheets?new QGML.Animator(animator):null}},QGML.Sprite=class{constructor({name:name}){this.name=name,this.image=QGML.gameManager.findAsset("sprites",this.name).image}get(){return this.image}set(){console.log("not yet implemented")}static Create(sprite){return sprite&&sprite.name?new QGML.Sprite(sprite):null}},QGML.Group=class{constructor({parent:parent=null,world:world="default-world",name:name="default-group",state:state={},customUpdate:customUpdate=null,customSetup:customSetup=null},worldObj){this.parent=parent,this.world=world,this.name=name,this.state={position:{x:0,y:0},size:{width:0,height:0}},this.originalState=state,this.absolutePosition={x:0,y:0},this.customUpdate=customUpdate,this.customSetup=customSetup}setup(p){this.customSetup&&QGML.ctx.eval(this.customSetup,this)(),this.customUpdate&&(this.customUpdate=QGML.ctx.eval(this.customUpdate,this)),this.parentObject=QGML.World.current.groups.find(g=>g.name===this.parent)}update(){this.originalState&&(this.state=QGML.ctx.eval(this.originalState),this.absolutePosition=this.state.position),this.parent&&(this.absolutePosition={x:this.parentObject.state.position.x+this.state.position.x,y:this.parentObject.state.position.y+this.state.position.y}),this.customUpdate&&this.customUpdate()}},QGML.World=class{constructor({id:id="default-world",state:state={},groups:groups=[],actors:actors=[],texts:texts=[],events:events=[]}){this.id=id,this.state=state,this.groups=groups,this.actors=actors,this.texts=texts,this.events=events,this.createEntities=this.createEntities.bind(this)}createEntities(){this.groups=this.groups.map(group=>new QGML.Group(group,this)),this.actors=this.actors.map(actor=>new QGML.Actor(actor,this)),this.texts=this.texts.map(text=>new QGML.Text(text,this))}},QGML.GameManager=class{constructor(config){this.config=config,this.keymappers={},this.scripts=config.scripts,this.assets=config.assets,this.vars=config.vars,this.defaultWorld=config.defaultWorld,this.selectedWorld=config.defaultWorld,this.loadWorld=this.loadWorld.bind(this),this.findWorld=this.findWorld.bind(this),this.createWorlds=this.createWorlds.bind(this),this.createKeymappers=this.createKeymappers.bind(this),this.findAsset=this.findAsset.bind(this)}createWorlds(){this.worlds=this.config.worlds.map(world=>new QGML.World(world)),this.worlds.forEach(world=>world.createEntities()),this.defaultWorld=this.config.defaultWorld,this.selectedWorld=this.defaultWorld,this.loadWorld(this.defaultWorld)}createKeymappers(){Object.keys(this.config.keymappers).forEach(key=>{this.keymappers[key]=new QGML.Keymapper(this.config.keymappers[key])})}setVar(world,name,value){this.vars[world][name]=value}loadWorld(world){if(this.selectedWorld=this.findWorld(world),this.currentGroups=this.selectedWorld.groups,this.currentActors=this.selectedWorld.actors,this.currentTexts=this.selectedWorld.texts,QGML.World.current=this.selectedWorld,QGML.ctx){let p5=QGML.ctx.p5;QGML.preload(p5),QGML.setup(p5),QGML.ctx=new QGML.Context,QGML.ctx.setVar("p5",p5)}}findWorld(id){return this.worlds.find(world=>world.id===id)}findAsset(type,name){return this.assets[type].find(a=>a.name===name)||{}}};
